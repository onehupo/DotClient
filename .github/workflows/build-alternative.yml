name: Build and Release (Alternative Options)

# 方案1: 通过workflow_dispatch手动触发
on:
  workflow_dispatch:
    inputs:
      build_target:
        description: 'Build target'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - windows
        - macos
      create_release:
        description: 'Create release after build'
        required: false
        default: false
        type: boolean

  # 方案2: 通过标签触发
  push:
    tags:
      - 'v*'  # 只有推送标签时才构建
    
  # 方案3: 通过commit消息中的特定标识触发
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # 条件判断：手动触发 OR 标签推送 OR commit消息包含[build]标识
    if: |
      github.event_name == 'workflow_dispatch' || 
      startsWith(github.ref, 'refs/tags/v') || 
      contains(github.event.head_commit.message, '[build]') || 
      github.event_name == 'pull_request'
      
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: windows-latest  
            target: x86_64-pc-windows-msvc
            ext: '.exe'
          - name: macos-latest
            target: x86_64-apple-darwin
            ext: ''
            arch: 'Intel'
          - name: macos-latest
            target: aarch64-apple-darwin
            ext: ''
            arch: 'Apple Silicon'

    runs-on: ${{ matrix.platform.name }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Node dependencies
      run: npm install

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.platform.target }}

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: "./src-tauri -> target"

    - name: Build Tauri App
      run: npm run tauri build -- --target ${{ matrix.platform.target }}

    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform.name }}-${{ matrix.platform.target }}-executable
        path: src-tauri/target/${{ matrix.platform.target }}/release/dotclient${{ matrix.platform.ext }}

    - name: Upload bundle (if exists)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ${{ matrix.platform.name }}-${{ matrix.platform.target }}-bundle
        path: src-tauri/target/${{ matrix.platform.target }}/release/bundle/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'true') ||
      startsWith(github.ref, 'refs/tags/v') ||
      (github.ref == 'refs/heads/main' && github.event_name == 'push' && contains(github.event.head_commit.message, '[build]'))
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: List artifacts (debug)
      run: find artifacts -type f -name "*" | head -20
    
    - name: Get release tag
      id: tag
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "tag=manual-${{ github.run_number }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "tag=v${{ github.run_number }}" >> $GITHUB_OUTPUT
        fi
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: Release ${{ steps.tag.outputs.tag }}
        body: |
          自动构建版本 ${{ steps.tag.outputs.tag }}
          
          包含以下平台的构建文件：
          - Windows x86_64
          - macOS Intel (x86_64)
          - macOS Apple Silicon (aarch64)
        files: |
          artifacts/**/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
